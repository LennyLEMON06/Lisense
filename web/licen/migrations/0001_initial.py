# Generated by Django 5.2.1 on 2025-05-15 11:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('address', models.TextField(verbose_name='Адрес сети')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
                'ordering': ['network', 'address'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название города')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название оператора')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
            ],
            options={
                'verbose_name': 'Оператор',
                'verbose_name_plural': 'Операторы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название провайдера')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
            ],
            options={
                'verbose_name': 'Провайдер',
                'verbose_name_plural': 'Провайдеры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InternetProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('speed', models.CharField(max_length=50, verbose_name='Скорость')),
                ('contract', models.CharField(max_length=100, verbose_name='Договор')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internet_providers', to='licen.address', verbose_name='Адрес')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='internet_providers', to='licen.provider', verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Интернет-провайдер',
                'verbose_name_plural': 'Интернет-провайдеры',
                'ordering': ['provider', 'address'],
            },
        ),
        migrations.CreateModel(
            name='LegalEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=255, verbose_name='Название юридического лица')),
                ('inn', models.CharField(max_length=12, unique=True, validators=[django.core.validators.MinLengthValidator(10)], verbose_name='ИНН')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='legal_entities', to='licen.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Юридическое лицо',
                'verbose_name_plural': 'Юридические лица',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=200, verbose_name='Название лицензии / ПО')),
                ('license_key', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ключ лицензии')),
                ('start_date', models.DateField(verbose_name='Дата начала действия')),
                ('end_date', models.DateField(verbose_name='Дата окончания действия')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licenses', to='licen.address', verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Лицензия',
                'verbose_name_plural': 'Лицензии',
                'ordering': ['end_date'],
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование сети')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('legal_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='networks', to='licen.legalentity', verbose_name='Юридическое лицо')),
            ],
            options={
                'verbose_name': 'Сеть',
                'verbose_name_plural': 'Сети',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='address',
            name='network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='licen.network', verbose_name='Сеть'),
        ),
        migrations.CreateModel(
            name='MobileOperator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='Номер телефона')),
                ('employee_name', models.CharField(max_length=255, verbose_name='ФИО сотрудника')),
                ('contract', models.CharField(max_length=100, verbose_name='Договор')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mobile_operators', to='licen.address', verbose_name='Адрес')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mobile_operators', to='licen.operator', verbose_name='Оператор')),
            ],
            options={
                'verbose_name': 'Мобильный оператор',
                'verbose_name_plural': 'Мобильные операторы',
                'ordering': ['operator', 'phone_number'],
            },
        ),
        migrations.CreateModel(
            name='PersonalAccountInternetProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('login', models.CharField(max_length=50, verbose_name='Логин')),
                ('password', models.CharField(max_length=100, verbose_name='Пароль')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='licen.address', verbose_name='Адрес')),
                ('internet_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personal_accounts', to='licen.internetprovider', verbose_name='Интернет-провайдер')),
            ],
            options={
                'verbose_name': 'Личный кабинет интернет-провайдера',
                'verbose_name_plural': 'Личные кабинеты интернет-провайдеров',
                'ordering': ['internet_provider', 'login'],
            },
        ),
        migrations.CreateModel(
            name='PersonalAccountMobileOperator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('login', models.CharField(max_length=50, verbose_name='Логин')),
                ('password', models.CharField(max_length=100, verbose_name='Пароль')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='licen.address', verbose_name='Адрес')),
                ('mobile_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personal_accounts', to='licen.mobileoperator', verbose_name='Мобильный оператор')),
            ],
            options={
                'verbose_name': 'Личный кабинет мобильного оператора',
                'verbose_name_plural': 'Личные кабинеты мобильных операторов',
                'ordering': ['mobile_operator', 'login'],
            },
        ),
        migrations.CreateModel(
            name='RouterAdminPanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('login', models.CharField(max_length=50, verbose_name='Логин')),
                ('password', models.CharField(max_length=100, verbose_name='Пароль')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP-адрес')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='router_admin_panels', to='licen.address', verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Доступ в админ панель роутера',
                'verbose_name_plural': 'Доступы в админ панели роутеров',
                'ordering': ['address', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('username', models.CharField(max_length=150, verbose_name='Имя пользователя')),
                ('message_type', models.CharField(max_length=20, verbose_name='Тип сообщения')),
                ('content', models.TextField(verbose_name='Содержимое сообщения')),
                ('sender', models.CharField(choices=[('user', 'Пользователь'), ('admin', 'Администратор')], max_length=20, verbose_name='Отправитель')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='licen.address', verbose_name='Адрес')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='licen.city', verbose_name='Город')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сообщение пользователя',
                'verbose_name_plural': 'Сообщения пользователей',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('role', models.CharField(choices=[('journalist', 'Журналист'), ('moderator', 'Модератор'), ('admin', 'Администратор')], default='journalist', max_length=20, verbose_name='Роль пользователя')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='WiFi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, verbose_name='Имя сети (SSID)')),
                ('password', models.CharField(max_length=100, verbose_name='Пароль')),
                ('frequency_band', models.CharField(choices=[('2.4', '2.4 ГГц'), ('5', '5 ГГц'), ('dual', 'Двухдиапазонный (2.4/5 ГГц)')], default='dual', max_length=10, verbose_name='Диапазон частот')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wifi_networks', to='licen.address', verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'WiFi сеть',
                'verbose_name_plural': 'WiFi сети',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='legalentity',
            index=models.Index(fields=['inn'], name='licen_legal_inn_fe5ead_idx'),
        ),
        migrations.AddIndex(
            model_name='license',
            index=models.Index(fields=['end_date'], name='licen_licen_end_dat_e5aa51_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='network',
            unique_together={('name', 'legal_entity')},
        ),
        migrations.AlterUniqueTogether(
            name='mobileoperator',
            unique_together={('phone_number', 'address')},
        ),
        migrations.AlterUniqueTogether(
            name='internetprovider',
            unique_together={('provider', 'address')},
        ),
        migrations.AlterUniqueTogether(
            name='routeradminpanel',
            unique_together={('ip_address', 'address')},
        ),
    ]
